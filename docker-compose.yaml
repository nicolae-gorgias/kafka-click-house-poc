version: "3.6"

services:
  clickhouse:
    image: clickhouse/clickhouse-server:22.10.7
    volumes:
#      - ./clickhouse/config.xml:/etc/clickhouse-server/config.xml
#      - ./clickhouse/zookeeper-servers.xml:/etc/clickhouse-server/conf.d/zookeeper-servers.xml
      - ./shared/ch-data/clickhouse:/var/lib/clickhouse
    ports:
      - 8123:8123
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    depends_on:
      - "zookeeper"

  kafka:
    image: confluentinc/cp-kafka:latest
    volumes:
      - ./shared/ch-data/kafka:/var/lib/kafka/data
    ports:
      - '9092:9092'
      - '31001:31001'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-connect:
    image: confluentinc/cp-kafka-connect:latest
    volumes:
      - ./jars:/etc/kafka-connect/jars
    ports:
      - 28082:28082
      - 8083:8083
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:29092
      CONNECT_REST_PORT: 28082
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "localhost"
      CONNECT_PLUGIN_PATH: /usr/share/java,/etc/kafka-connect/jars
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_VALUE_CONVERTER_AUTO_REGISTER_SCHEMA: false
      CONNECT_VALUE_CONVERTER_USE_LATEST_VERSION: true
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: false
    depends_on:
      - kafka

  zookeeper:
      image: zookeeper
      ports:
          - "2181:2181"
          - "2182:2182"

#  schema-registry:
#    image: confluentinc/cp-schema-registry:5.3.0
#    depends_on:
#      - zookeeper
#      - kafka
#    ports:
#      - '8081:8081'
#      - '31002:31002'
#    environment:
#      SCHEMA_REGISTRY_HOST_NAME: schema-registry
#      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
#      SCHEMA_REGISTRY_JMX_HOSTNAME: "localhost"
#      SCHEMA_REGISTRY_JMX_PORT: 31002

  kafka-proxy:
    image: confluentinc/cp-kafka-rest:5.3.0
    depends_on:
      - zookeeper
      - kafka
    ports:
      - '8082:8082'
      - '31005:31005'
    environment:
      KAFKA_REST_HOST_NAME: kafka-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: 'kafka:29092'
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
#      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      KAFKAREST_JMX_HOSTNAME: "localhost"
      KAFKAREST_JMX_PORT: 31005

  faust:
    build:
      context: ./faust
      dockerfile: Dockerfile
    ports:
      - '6066:6066'
    depends_on:
      - kafka
      - kafka-proxy
    environment:
      FAUST_BROKER: "kafka://kafka"

  cube:
    image: cubejs/cube
    volumes:
      - ./cube:/cube/conf
    ports:
      - '4000:4000'
    depends_on:
      - clickhouse
    environment:
      CUBEJS_DEV_MODE: "true"
